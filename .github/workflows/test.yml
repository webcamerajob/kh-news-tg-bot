name: VPN Parser & Poster with Cache

on:
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
    - name: üíæ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        sudo apt-get update
        sudo apt-get install -y wireguard-tools resolvconf curl python3-pip
        pip3 install -r requirements.txt

    - name: üìÅ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ WireGuard –∫–æ–Ω—Ñ–∏–≥–∞
      run: |
        mkdir -p $HOME/wg
        echo "${{ secrets.WG_CONFIG }}" > $HOME/wg/wg0.conf
        chmod 600 $HOME/wg/wg0.conf

    - name: üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VPN –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ DNS
      run: |
        sudo wg-quick up $HOME/wg/wg0.conf
        echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
        echo "VPN IP: $(curl -s https://ipinfo.io/ip)"

    - name: üß† –ü–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ VPN (main.py)
      run: |
        echo "‚Üí –ó–∞–ø—É—Å–∫–∞–µ–º main.py..."
        python3 main.py || echo "‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"

    - name: üõë –û—Ç–∫–ª—é—á–µ–Ω–∏–µ VPN
      if: always()
      run: |
        echo "‚Üí –û—Ç–∫–ª—é—á–∞–µ–º WireGuard..."
        sudo wg-quick down $HOME/wg/wg0.conf || echo "WireGuard —É–∂–µ –∑–∞–≤–µ—Ä—à—ë–Ω"

    - name: üì§ –ü–æ—Å—Ç–∏–Ω–≥ (poster.py)
      run: |
        echo "‚Üí –ó–∞–ø—É—Å–∫–∞–µ–º poster.py..."
        python3 poster.py || echo "‚ö†Ô∏è –ü–æ—Å—Ç–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
