name: Парсер

on:
  schedule:
    - cron: '0,30 22-23 * * *'   # 05–06 по Индокитаю (UTC+7)
    - cron: '0,30 0-10 * * *'    # 06–18 по Индокитаю
  workflow_dispatch:

# 🔐 Права для GITHUB_TOKEN
permissions:
  contents: read      # доступ к коду
  actions: write      # для repository_dispatch

jobs:
  run-parser:
    runs-on: ubuntu-latest
    
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}    # ← вот здесь

    steps:
    - name: 🔄 Получение репозитория
      uses: actions/checkout@v4
          
    - name: 🔧 Установка зависимостей
      run: |
        sudo apt-get update
        sudo apt-get install -y wireguard-tools resolvconf curl python3-pip
        pip3 install -r requirements-parser.txt

    - name: 📁 Подготовка WireGuard-конфига
      run: |
        mkdir -p $HOME/wg
        echo "${{ secrets.WG_CONFIG }}" > $HOME/wg/wg0.conf
        chmod 600 $HOME/wg/wg0.conf
        
    - name: 🔐 Подключение VPN и DNS
      run: |
        sudo wg-quick up $HOME/wg/wg0.conf
        echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
        echo "🌐 VPN IP: $(curl -s https://ipinfo.io/ip)"

    - name: 🧠 Запуск парсера
      run: |
        echo "→ Запуск main.py..."
        python3 main.py || echo "⚠️ main.py завершился с ошибкой"

    - name: 🔍 Проверка содержимого articles/
      run: |
        ls -la articles/
        cat articles/catalog.json || echo "⚠️ catalog.json пуст или не существует"
        
    - name: 📁 Проверка catalog.json
      id: check_catalog
      run: |
        for i in 1 2; do
          if [ -f "articles/catalog.json" ]; then
            echo "✅ catalog.json найден"
            echo "upload=true" >> $GITHUB_OUTPUT
         else
            echo "⚠️ catalog.json не найден"
            echo "upload=false" >> $GITHUB_OUTPUT
         fi
        done
        if [ ! -f "articles/catalog.json" ]; then
          echo "⚠️ catalog.json не найден"
          echo "upload=false" >> $GITHUB_OUTPUT
        fi
        
    - name: 🛑 Отключение VPN
      if: always()
      run: |
        echo "→ Отключение WireGuard..."
        sudo wg-quick down $HOME/wg/wg0.conf || echo "WireGuard уже выключен"

    - name: 📦 Сохранение артефакта
      if: steps.check_catalog.outputs.upload == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: parsed-content
        path: articles/
