name: Parse & Post Articles
permissions:
  contents: write
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  POST_DELAY: 5
  BATCH_LIMIT: 50
  PYTHON_VERSION: "3.10"

jobs:
  parse:
    name: Parsing
    runs-on: ubuntu-latest
    env:
      WG_CONFIG: ${{ secrets.WG_CONFIG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js for cloudscraper
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt --use-deprecated=legacy-resolver
          python -c "import cloudscraper; print(f'Cloudscraper v{cloudscraper.__version__}')"

      - name: üîê Setup WireGuard with random IP
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools jq
          
          # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ IP
          RANDOM_IP=$(printf "%d.%d.%d.%d" "$((RANDOM % 256))" "$((RANDOM % 256))" "$((RANDOM % 256))" "$((RANDOM % 256))")
          echo "Using random source IP: $RANDOM_IP"
          
          # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞ WireGuard
          mkdir -p $HOME/wg
          echo "$WG_CONFIG" | sed "s/10.2.0.2/$RANDOM_IP/" > $HOME/wg/wg0.conf
          chmod 600 $HOME/wg/wg0.conf
          
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS
          echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
          echo "nameserver 8.8.8.8" | sudo tee -a /etc/resolv.conf
          
          # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ VPN
          sudo wg-quick up $HOME/wg/wg0.conf
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ IP
          echo "Public IP after VPN:"
          curl --retry 3 --retry-delay 5 -s https://api.ipify.org
          ping -c 3 google.com

      - name: Run parser
        run: |
          python3 main.py --lang ru --posted-file articles/posted.json

      - name: üõë Teardown WireGuard
        if: always()
        run: sudo wg-quick down $HOME/wg/wg0.conf || true

      - name: Upload parsed content
        uses: actions/upload-artifact@v4
        with:
          name: parsed-content
          path: articles/*

  post:
    name: Publishing
    needs: parse
    runs-on: ubuntu-latest
    env:
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHANNEL: ${{ secrets.TELEGRAM_CHANNEL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Download watermark
        run: |
          mkdir -p watermarks
          # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL)
          curl -L -o watermark.png https://example.com/watermark.png

      - name: Download parsed content
        uses: actions/download-artifact@v4
        with:
          name: parsed-content
          path: parsed_articles

      - name: Run poster
        run: |
          python3 poster.py \
            --parsed-dir parsed_articles \
            --state-file articles/posted.json \
            --limit $BATCH_LIMIT

      - name: Update catalog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add articles/posted.json
          
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update posted articles catalog"
            git push
          fi
