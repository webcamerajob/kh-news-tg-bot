name: Parse & Post Articles
permissions:
  contents: write

on:
  push:    { branches: [main] }
  workflow_dispatch:

env:
  POST_DELAY: 5
  BATCH_LIMIT: 50

jobs:
  parse:
    runs-on: ubuntu-latest
    outputs:
      new_count: ${{ steps.parser.outputs.new_count }}

    steps:
      - name: Checkout code & state
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with: {python-version: '3.x'}

      - name: Install parser deps
        run: pip install -r requirements-parser.txt

      - id: parser
        name: Run smart parser
        run: |
          python3 main.py \
            --state-file articles/posted.json \
            --output-dir parser_output
        # скрипт внутри выведет ::set-output name=new_count::<X>

      - name: Upload new parsed-content
        if: steps.parser.outputs.new_count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: parsed-content
          path: parser_output/*

  post:
    needs: parse
    runs-on: ubuntu-latest
    if: needs.parse.outputs.new_count != '0'
    env:
      TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHANNEL: ${{ secrets.TELEGRAM_CHANNEL }}

    steps:
      - name: Checkout state-file
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download parsed-content
        uses: actions/download-artifact@v4
        with:
          name: parsed-content
          path: parsed_articles

      - name: Debug parsed_articles
        run: |
          echo "→ Tree of parsed_articles/:"
          ls -R parsed_articles

      - name: Setup Python for poster
        uses: actions/setup-python@v4
        with: {python-version: '3.x'}

      - name: Install poster deps
        run: pip install -r requirements-poster.txt

      - name: Run poster
        run: |
          python3 poster.py \
            --parsed-dir parsed_articles \
            --state-file articles/posted.json \
            --limit $BATCH_LIMIT

      - name: Commit updated posted.json
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add articles/posted.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: update posted.json"
            git push
          else
            echo "✅ posted.json unchanged"
          fi
