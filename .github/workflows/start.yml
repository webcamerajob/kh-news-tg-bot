name: Parse & Post Articles
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  POST_DELAY: 5
  BATCH_LIMIT: 50

jobs:

  parse:
    runs-on: ubuntu-latest
    outputs:
      new_count: ${{ steps.parse.outputs.new_count }}
    env:
      WG_CONFIG: ${{ secrets.WG_CONFIG }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools

      - name: Setup Python for parser
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install parser deps
        run: pip install -r requirements-parser.txt

      - id: parse
        name: Run parser (main.py)
        run: |
          python3 main.py \
            --state-file articles/posted.json \
            --output-dir parser_output \
            --base-url https://www.khmertimeskh.com \
            --slug national \
            --lang ru
        # `main.py` must print "::set-output name=new_count::<n>"

      - name: Upload parsed-content
        if: steps.parse.outputs.new_count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: parsed-content
          path: parser_output/*

  post:
    needs: parse
    if: needs.parse.outputs.new_count != '0'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (state-file)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Download parsed-content
        uses: actions/download-artifact@v4
        with:
          name: parsed-content
          path: parsed_articles

      - name: Setup Python for poster
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install poster deps
        run: pip install -r requirements-poster.txt

      - name: Run poster (poster.py)
        run: |
          python3 poster.py \
            --parsed-dir parsed_articles \
            --state-file articles/posted.json \
            --limit ${{ env.BATCH_LIMIT }}

      - name: Commit updated posted.json
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add articles/posted.json
          if ! git diff --quiet; then
            git commit -m "chore: update posted.json"
            git push
          else
            echo "âœ… posted.json unchanged"
          fi
