name: Parse & Post Articles
permissions:
  contents: write
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  POST_DELAY: 5
  BATCH_LIMIT: 50
  PYTHON_VERSION: "3.10"

jobs:
  parse:
    name: RSS Parsing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run RSS parser
        run: |
          python3 rss_parser.py \
            --rss-url "https://www.khmertimeskh.com/category/national/feed/" \
            --limit $BATCH_LIMIT \
            --posted-file articles/posted.json

      - name: Upload parsed content
        uses: actions/upload-artifact@v4
        with:
          name: parsed-content
          path: articles/*

  post:
    name: Publishing
    needs: parse
    runs-on: ubuntu-latest
    env:
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHANNEL: ${{ secrets.TELEGRAM_CHANNEL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download watermark
        run: |
          mkdir -p watermarks
          # Скачивание водяного знака (замените на ваш URL)
          curl -L -o watermark.png https://example.com/watermark.png

      - name: Download parsed content
        uses: actions/download-artifact@v4
        with:
          name: parsed-content
          path: parsed_articles

      - name: Run poster
        run: |
          python3 poster.py \
            --parsed-dir parsed_articles \
            --state-file articles/posted.json \
            --limit $BATCH_LIMIT

      - name: Update catalog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add articles/posted.json
          
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update posted articles catalog"
            git push
          fi
