name: Parse & Post (Khmertimes)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
  
permissions:
  contents: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '30 22-23 * * *'
    - cron: '30 0-11 * * *'
    
env:
  POST_DELAY: 10
  BATCH_LIMIT: 15

jobs:
  build-and-publish:
    name: Parse and Publish (Khmertimes)
    runs-on: ubuntu-latest
    
    env:
      TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHANNEL: ${{ secrets.TELEGRAM_CHANNEL }}
      WG_CONFIG:        ${{ secrets.WG_CONFIG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install requirements
        run: |
          if [ -f requirements-parser.txt ]; then pip install -r requirements-parser.txt; fi
          if [ -f requirements-poster.txt ]; then pip install -r requirements-poster.txt; fi
      
      - name: 🔐 Setup WireGuard
        run: |
          sudo apt-get update && sudo apt-get install -y wireguard-tools
          echo "$WG_CONFIG" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo wg-quick up wg0
          # Принудительно используем DNS, чтобы избежать проблем с разрешением имён
          echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf

      - name: Run parser
        id: parse_step
        run: |
          echo "→ STARTING KHMERTIMES PARSER RUN"
          # Убедитесь, что имя файла (например main.py) верное
          python3 main.py \
            --base-url "https://www.khmertimeskh.com" \
            --lang 'ru' \
            --limit 15 \
            --posted-state-file articles/posted.json | tee parser_output.txt
          echo "→ PARSER RUN COMPLETE"
          
          NEW_ARTICLES_STATUS=$(grep "NEW_ARTICLES_STATUS:" parser_output.txt | cut -d: -f2 | tr -d '[:space:]')
          echo "new_articles_found=$NEW_ARTICLES_STATUS" >> $GITHUB_OUTPUT
          echo "Extracted new_articles_found status: '$NEW_ARTICLES_STATUS'"
      
      - name: 🛑 Teardown WireGuard
        if: always()
        run: sudo wg-quick down wg0 || true

      - name: Run poster
        if: steps.parse_step.outputs.new_articles_found == 'true'
        run: |
          echo "→ Running poster..."
          python3 poster.py \
            --parsed-dir articles \
            --state-file articles/posted.json \
            --limit $BATCH_LIMIT

      - name: Commit updated data files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [ -f "articles/posted.json" ]; then git add articles/posted.json; fi
          if [ -f "articles/catalog.json" ]; then git add articles/catalog.json; fi

          if ! git diff --cached --quiet; then
            git commit -m "chore: update data files (posted, catalog)"
            git pull --rebase origin main
            git push
          else
            echo "✅ Data files unchanged"
          fi
