# .github/workflows/parsepostv2.yml
name: Parse & Post Articles

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  POST_DELAY: 5
  BATCH_LIMIT: 50

jobs:

  parse:
    name: –ü–∞—Ä—Å–∏–Ω–≥ ‚Üí –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã (WireGuard)
    runs-on: ubuntu-latest
    env:
      WG_CONFIG: ${{ secrets.WG_CONFIG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: üîê Setup WireGuard & install jq
        run: |
          sudo apt-get update \
            && sudo apt-get install -y --no-install-recommends wireguard-tools resolvconf curl jq
          mkdir -p $HOME/wg
          echo "${WG_CONFIG}" | base64 --decode > $HOME/wg/wg0.conf
          chmod 600 $HOME/wg/wg0.conf
          sudo wg-quick up $HOME/wg/wg0.conf
          echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install parser requirements
        run: |
          if [ -f requirements-parser.txt ]; then
            pip install -r requirements-parser.txt
          fi

      - name: üß† Run parser
        run: python3 main.py --lang ru

      - name: Debug parser output
        run: |
          echo "‚Üí –ü–æ—Å–ª–µ –ø–∞—Ä—Å–µ—Ä–∞:"
          ls -R parsed

      - name: Upload parsed-content
        uses: actions/upload-artifact@v3
        with:
          name: parsed-content
          path: parsed

      - name: üõë Teardown WireGuard
        if: always()
        run: sudo wg-quick down $HOME/wg/wg0.conf || true

  post:
    name: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π
    needs: parse
    runs-on: ubuntu-latest
    env:
      TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHANNEL: ${{ secrets.TELEGRAM_CHANNEL }}

    steps:
      - name: Checkout repo (—Å –ø—É—Å—Ç—ã–º catalog.json)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python for poster
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install poster requirements
        run: pip install httpx pillow

      - name: Download parsed-content
        uses: actions/download-artifact@v3
        with:
          name: parsed-content
          path: parsed

      - name: Debug parsed-dir
        run: |
          echo "‚Üí –°—Ç—Ä—É–∫—Ç—É—Ä–∞ parsed/:"
          ls -R parsed

      - name: Run poster
        run: |
          python3 poster.py \
            --parsed-dir parsed \
            --state-file articles/catalog.json \
            --limit $BATCH_LIMIT

      - name: Commit updated catalog.json
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add articles/catalog.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: update catalog after posting"
            git push
          else
            echo "‚úÖ catalog.json unchanged ‚Äî skipping commit"
          fi
