#!/usr/bin/env python3
import os
import json
from pathlib import Path
import fcntl
import logging
import telebot

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (GitHub Secrets)
API_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
if not API_TOKEN:
    raise RuntimeError("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

CATALOG_PATH = Path('articles/catalog.json')
bot = telebot.TeleBot(API_TOKEN, parse_mode='HTML')

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s"
)

def load_catalog():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Ñ–∞–π–ª–∞"""
    if not CATALOG_PATH.exists():
        return []
    try:
        with open(CATALOG_PATH, "r", encoding="utf-8") as f:
            fcntl.flock(f, fcntl.LOCK_SH)
            data = json.load(f)
            return [item for item in data if isinstance(item, dict) and "id" in item]
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ catalog.json: {e}")
        return []

def save_catalog(catalog):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Ñ–∞–π–ª–∞"""
    CATALOG_PATH.parent.mkdir(parents=True, exist_ok=True)
    try:
        with open(CATALOG_PATH, "w", encoding="utf-8") as f:
            fcntl.flock(f, fcntl.LOCK_EX)
            json.dump(catalog, f, ensure_ascii=False, indent=2)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è catalog.json: {e}")

@bot.message_handler(commands=['cancelmenu'])
def send_cancel_menu(message):
    """
    /cancelmenu ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã.
    """
    catalog = load_catalog()
    markup = telebot.types.InlineKeyboardMarkup()
    for art in catalog:
        if not art.get('posted', False):
            btn = telebot.types.InlineKeyboardButton(
                f"–û—Ç–º–µ–Ω–∏—Ç—å: {art.get('title', '')[:32]}",
                callback_data=f"cancel_{art['id']}"
            )
            markup.add(btn)
    if markup.keyboard:
        bot.send_message(message.chat.id, "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã.")

@bot.callback_query_handler(func=lambda call: call.data.startswith('cancel_'))
def cancel_post(call):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å": –ø–æ–º–µ—á–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∫–∞–∫ –æ—Ç–º–µ–Ω—ë–Ω–Ω—É—é.
    """
    post_id = int(call.data.split('_')[1])
    catalog = load_catalog()
    changed = False
    for art in catalog:
        if art["id"] == post_id and not art.get("posted", False):
            art["posted"] = True
            changed = True
    if changed:
        save_catalog(catalog)
        bot.answer_callback_query(call.id, text="–ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞!")
        bot.edit_message_text("–ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", call.message.chat.id, call.message.message_id)
    else:
        bot.answer_callback_query(call.id, text="–£–∂–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", show_alert=True)

@bot.message_handler(commands=['help', 'start'])
def send_help(message):
    """
    /help ‚Äî –≤—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–∫—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
    """
    help_text = (
        "ü§ñ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏ Telegram-–±–æ—Ç–∞</b>\n\n"
        "<b>/cancelmenu</b> ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã.\n"
        "<b>/help</b> ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ.\n\n"
        "–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é, –≤—ã–±–µ—Ä–∏—Ç–µ –µ—ë –≤ –º–µ–Ω—é –æ—Ç–º–µ–Ω—ã. "
        "–û—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª.\n\n"
        "<b>–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–∞—Ä—Å–µ—Ä –Ω–∞ GitHub:</b>\n"
        "1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É <b>Actions</b> –Ω–∞ GitHub.\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π workflow –∏ –Ω–∞–∂–º–∏—Ç–µ <b>Run workflow</b>.\n"
        "3. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–∫—Ä–µ—Ç <b>TELEGRAM_BOT_TOKEN</b> –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (Settings ‚Üí Secrets ‚Üí Actions).\n"
    )
    bot.send_message(message.chat.id, help_text, parse_mode='HTML')

if name == "main":
    print("–ë–æ—Ç –æ—Ç–º–µ–Ω—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∑–∞–ø—É—â–µ–Ω.")
    bot.polling(none_stop=True)
